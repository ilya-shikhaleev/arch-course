{
	"info": {
		"_postman_id": "28440346-6458-4760-a4bc-43319119f78f",
		"name": "Проект",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "27e7ee2a-8754-45d7-a407-20e7a9e03c99",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get product error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "86cc1524-ae65-4289-ab70-b378027dc8c7",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/products/72eb9cf0-da7f-11ea-ab94-02420a200004",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"products",
						"72eb9cf0-da7f-11ea-ab94-02420a200004"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7c22c081-7cb9-4d80-9b6a-1cd8ed17adae",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							" \"userId\": {",
							" \"type\": \"string\"",
							" }",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"userId\", jsonData.userId);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b91e3056-3683-4d57-b2c7-88aea84f87ac",
						"exec": [
							"pm.collectionVariables.set(\"login\", pm.variables.replaceIn('{{$randomUserName}}'));",
							"pm.collectionVariables.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'));",
							"pm.collectionVariables.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
							"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));",
							"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{login}}\",\n  \"password\": \"{{password}}\",\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"{{email}}\",\n  \"phone\": \"{{phone}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users/signup",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get product error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e0794ab-981b-4b4a-a870-8dd6b4687e6e",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/products/72eb9cf0-da7f-11ea-ab94-02420a200004",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"products",
						"72eb9cf0-da7f-11ea-ab94-02420a200004"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cc768594-00eb-4474-9e32-bfa08551af3c",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"johndoe589\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Wick\",\n    \"email\": \"john@wick.com\",\n    \"phone\": \"+71002003040\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a9dfdd27-bd74-4039-be24-13bbd0eefc42",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"login\": \"{{login}}\",\n  \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get product",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1e706cae-87c1-481b-8bdd-050dd6d9b94f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"metaProductID\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"title\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"description\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"material\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"price\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"height\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"color\": {",
							"            \"type\": \"string\"",
							"        }",
							"    },",
							"    \"required\": [\"metaProductID\", \"title\", \"description\", \"material\", \"price\"]",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(jsonData.title).to.eql(\"Gopher\");",
							"    pm.expect(jsonData.price).to.eql(10);",
							"    pm.expect(jsonData.height).to.eql(35);",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"id\", jsonData.id);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/products/72eb9cf0-da7f-11ea-ab94-02420a200004",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"products",
						"72eb9cf0-da7f-11ea-ab94-02420a200004"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9055e71-f905-4f44-bea3-f0af3779ad70",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "626878db-61f1-4e2a-93e2-37ac8ff752dd",
						"exec": [
							"pm.collectionVariables.set(\"newLogin\", pm.variables.replaceIn('{{$randomUserName}}'));",
							"pm.collectionVariables.set(\"newEmail\", pm.variables.replaceIn('{{$randomEmail}}'));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{newLogin}}\",\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"{{newEmail}}\",\n  \"phone\": \"{{phone}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c7eab9fd-d22e-48e5-a6f8-5a9290df9402",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"username\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"email\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"firstName\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"lastName\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"phone\": {",
							"            \"type\": \"string\"",
							"        }",
							"    },",
							"    \"required\": [\"phone\", \"username\", \"email\", \"firstName\", \"lastName\"]",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(jsonData.firstName).to.eql(pm.variables.get(\"firstName\"));",
							"    pm.expect(jsonData.lastName).to.eql(pm.variables.get(\"lastName\"));",
							"    pm.expect(jsonData.username).to.eql(pm.variables.get(\"newLogin\"));",
							"    pm.expect(jsonData.email).to.eql(pm.variables.get(\"newEmail\"));",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"id\", jsonData.id);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users/{{userId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b4b1849e-32cb-4e2e-a12a-e43fabe2cfb8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get product error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4cc6ee46-a0a4-4dfa-92a0-5e424ab36eb5",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/products/72eb9cf0-da7f-11ea-ab94-02420a200004",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"products",
						"72eb9cf0-da7f-11ea-ab94-02420a200004"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read user error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07a51245-9b95-4ea6-9f6a-6951cebb4a49",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users/{{userId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register second user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6664afc9-440a-4604-8acf-515088ff43c7",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							" \"userId\": {",
							" \"type\": \"string\"",
							" }",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"userId2\", jsonData.userId);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "65c7b6f0-691f-4d53-a67b-e9a7e4b92f5b",
						"exec": [
							"pm.collectionVariables.set(\"login2\", pm.variables.replaceIn('{{$randomUserName}}'));",
							"pm.collectionVariables.set(\"password2\", pm.variables.replaceIn('{{$randomPassword}}'));",
							"pm.collectionVariables.set(\"firstName2\", pm.variables.replaceIn('{{$randomFirstName}}'));",
							"pm.collectionVariables.set(\"lastName2\", pm.variables.replaceIn('{{$randomLastName}}'));",
							"pm.collectionVariables.set(\"email2\", pm.variables.replaceIn('{{$randomEmail}}'));",
							"pm.collectionVariables.set(\"phone2\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{login2}}\",\n  \"password\": \"{{password2}}\",\n  \"firstName\": \"{{firstName2}}\",\n  \"lastName\": \"{{lastName2}}\",\n  \"email\": \"{{email2}}\",\n  \"phone\": \"{{phone2}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users/signup",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login second user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c9d4063-9781-4271-a2f3-1ccb7829d7ac",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"login\": \"{{login2}}\",\n  \"password\": \"{{password2}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update first user error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ed74cb69-655e-47f1-b5dd-00a1e0462e88",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"johndoe589\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Wick\",\n    \"email\": \"john@wick.com\",\n    \"phone\": \"+71002003040\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users/{{userId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read first user error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a1f97591-f6cf-4493-b17b-b91e16f7796e",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users/{{userId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read second user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1b1bc562-d4ab-4ba1-aee1-30ae77c2ca8c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"username\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"email\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"firstName\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"lastName\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"phone\": {",
							"            \"type\": \"string\"",
							"        }",
							"    },",
							"    \"required\": [\"phone\", \"username\", \"email\", \"firstName\", \"lastName\"]",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(jsonData.firstName).to.eql(pm.variables.get(\"firstName2\"));",
							"    pm.expect(jsonData.lastName).to.eql(pm.variables.get(\"lastName2\"));",
							"    pm.expect(jsonData.username).to.eql(pm.variables.get(\"login2\"));",
							"    pm.expect(jsonData.email).to.eql(pm.variables.get(\"email2\"));",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"id\", jsonData.id);",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users/{{userId2}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{userId2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout second user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bdf51f52-e18a-4691-8638-fcaeceb7250b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d47c387f-fbe6-4621-89a6-3480560d9245",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e39488fb-222d-40a7-9410-4505de8c6585",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c8147b87-c17f-4671-a2a7-3b33e1ba6b83",
			"key": "baseUrl",
			"value": "arch.homework"
		},
		{
			"id": "a0fdeed2-cdf0-42ba-8d4d-83a07ef88189",
			"key": "userId",
			"value": ""
		},
		{
			"id": "244bef53-09d2-4223-9c03-c64338a59ef8",
			"key": "login",
			"value": ""
		},
		{
			"id": "5fcc4966-28fb-4c27-abcb-b1a8f1c42d6e",
			"key": "email",
			"value": ""
		},
		{
			"id": "eec4a6f6-deca-4edf-abff-0d82ad58df1d",
			"key": "firstName",
			"value": ""
		},
		{
			"id": "ecd9d9ce-8ee4-417b-be3c-74fc898dfa4f",
			"key": "lastName",
			"value": ""
		},
		{
			"id": "714e32a4-4e95-4406-8631-e02b0359a963",
			"key": "password",
			"value": ""
		},
		{
			"id": "c9b715ce-ee43-4dee-b609-1d7e8e9cc583",
			"key": "phone",
			"value": ""
		},
		{
			"id": "824e84df-593f-4b8b-83d2-648e13bf355a",
			"key": "id",
			"value": ""
		},
		{
			"id": "30b59bb7-b567-4cc0-8eed-765c07534c20",
			"key": "newEmail",
			"value": ""
		},
		{
			"id": "7ab62658-03be-4919-9cc2-826b590ff7ca",
			"key": "newLogin",
			"value": ""
		},
		{
			"id": "d6735756-dec1-4254-a8a0-26fef71148b7",
			"key": "email2",
			"value": ""
		},
		{
			"id": "5d60d1f3-7eda-4239-82ef-905aa69b12da",
			"key": "firstName2",
			"value": ""
		},
		{
			"id": "949c6cad-bcec-42d9-b229-b0c71f82ac76",
			"key": "lastName2",
			"value": ""
		},
		{
			"id": "7a71ecb5-a68f-465b-a747-52b16e466c85",
			"key": "login2",
			"value": ""
		},
		{
			"id": "ccda7974-ec58-4720-8043-2d61d615af48",
			"key": "password2",
			"value": ""
		},
		{
			"id": "aa5b7fcb-077d-4987-bd62-f794e0427752",
			"key": "phone2",
			"value": ""
		},
		{
			"id": "4a82d7ec-c5fb-4924-aabf-1ca2ed7f3f12",
			"key": "userId2",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}