{
	"info": {
		"_postman_id": "1a1bc87d-22e6-4700-9850-443b7708229a",
		"name": "Авторизация",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9c4fe23b-dcee-4a97-a442-d35b86bdbf1b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/otusapp/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"otusapp",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get profile error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dff03018-c791-4e4e-9412-b3e7e66170d7",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/userinfo/info",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"userinfo",
						"info"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8220bc73-941b-4193-a1b0-3fbac98db33c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							" \"userId\": {",
							" \"type\": \"string\"",
							" }",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"userId\", jsonData.userId);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "68f501f3-d3b0-49eb-b23c-cc0a17206e64",
						"exec": [
							"pm.collectionVariables.set(\"login\", pm.variables.replaceIn('{{$randomUserName}}'));",
							"pm.collectionVariables.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'));",
							"pm.collectionVariables.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
							"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));",
							"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{login}}\",\n  \"password\": \"{{password}}\",\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"{{email}}\",\n  \"phone\": \"{{phone}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/otusapp/api/v1/users",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"otusapp",
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get profile error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ace32762-676b-4808-93a9-93f97edb45c7",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/userinfo/info",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"userinfo",
						"info"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "acae6629-56fc-41d1-bb5e-c8870cb9ae8d",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"johndoe589\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Wick\",\n    \"email\": \"john@wick.com\",\n    \"phone\": \"+71002003040\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/api/v1/user",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"api",
						"v1",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "35cbd333-47a3-4adf-ae3b-91cb08b93c3f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"login\": \"{{login}}\",\n  \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/otusapp/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"otusapp",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "472fd6c9-e798-47bd-afec-f2ac74061b2d",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"id\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"login\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"email\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"first_name\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"last_name\": {",
							"        \"type\": \"string\"",
							"    }",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(jsonData.first_name).to.eql(pm.variables.get(\"firstName\"));",
							"    pm.expect(jsonData.last_name).to.eql(pm.variables.get(\"lastName\"));",
							"    pm.expect(jsonData.login).to.eql(pm.variables.get(\"login\"));",
							"    pm.expect(jsonData.email).to.eql(pm.variables.get(\"email\"));",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"id\", jsonData.id);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/userinfo/info",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"userinfo",
						"info"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c02ea54-9f41-4582-8dc3-d33098db33f0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d722bc67-def2-4384-a5f5-46436515377c",
						"exec": [
							"pm.collectionVariables.set(\"newLogin\", pm.variables.replaceIn('{{$randomUserName}}'));",
							"pm.collectionVariables.set(\"newEmail\", pm.variables.replaceIn('{{$randomEmail}}'));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{newLogin}}\",\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"{{newEmail}}\",\n  \"phone\": \"{{phone}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/api/v1/user",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"api",
						"v1",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f5844832-b665-4fb7-a56a-31c64f22d4a6",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"id\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"login\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"email\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"first_name\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"last_name\": {",
							"        \"type\": \"string\"",
							"    }",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(jsonData.firstName).to.eql(pm.variables.get(\"firstName\"));",
							"    pm.expect(jsonData.lastName).to.eql(pm.variables.get(\"lastName\"));",
							"    pm.expect(jsonData.username).to.eql(pm.variables.get(\"newLogin\"));",
							"    pm.expect(jsonData.email).to.eql(pm.variables.get(\"newEmail\"));",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"id\", jsonData.id);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/user/api/v1/users/{{userId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"api",
						"v1",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "64a9d937-a420-4b00-a120-b362cd7e213b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"id\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"login\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"email\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"first_name\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"last_name\": {",
							"        \"type\": \"string\"",
							"    }",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(jsonData.first_name).to.eql(pm.variables.get(\"firstName\"));",
							"    pm.expect(jsonData.last_name).to.eql(pm.variables.get(\"lastName\"));",
							"    pm.expect(jsonData.login).to.eql(pm.variables.get(\"login\")); // this data is cached",
							"    pm.expect(jsonData.email).to.eql(pm.variables.get(\"email\"));",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"id\", jsonData.id);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/userinfo/info",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"userinfo",
						"info"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d914049c-7fb0-443e-9451-960e59b7d3ff",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/otusapp/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"otusapp",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get profile error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "04d64b55-5917-4327-ac73-6d05a7312c84",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/userinfo/info",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"userinfo",
						"info"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register second user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "50de6c28-d3a4-446e-9340-d76f7a3d4032",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							" \"userId\": {",
							" \"type\": \"string\"",
							" }",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"userId2\", jsonData.userId);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d827ffcc-0b40-4303-a24e-39e0b6ebd82c",
						"exec": [
							"pm.collectionVariables.set(\"login2\", pm.variables.replaceIn('{{$randomUserName}}'));",
							"pm.collectionVariables.set(\"password2\", pm.variables.replaceIn('{{$randomPassword}}'));",
							"pm.collectionVariables.set(\"firstName2\", pm.variables.replaceIn('{{$randomFirstName}}'));",
							"pm.collectionVariables.set(\"lastName2\", pm.variables.replaceIn('{{$randomLastName}}'));",
							"pm.collectionVariables.set(\"email2\", pm.variables.replaceIn('{{$randomEmail}}'));",
							"pm.collectionVariables.set(\"phone2\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{login2}}\",\n  \"password\": \"{{password2}}\",\n  \"firstName\": \"{{firstName2}}\",\n  \"lastName\": \"{{lastName2}}\",\n  \"email\": \"{{email2}}\",\n  \"phone\": \"{{phone2}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/otusapp/api/v1/users",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"otusapp",
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login second user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "69be5755-2577-498d-b959-077894ea088c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"login\": \"{{login2}}\",\n  \"password\": \"{{password2}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/otusapp/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"otusapp",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update first user error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2046faf6-fd51-466c-8ce7-68ac71bc9253",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"johndoe589\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Wick\",\n    \"email\": \"john@wick.com\",\n    \"phone\": \"+71002003040\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/user/api/v1/users/{{userId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"api",
						"v1",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read first user error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9e9ed0b-1c76-4cd1-81ae-797d8308665f",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/user/api/v1/users/{{userId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"api",
						"v1",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read second user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "67ba3c52-a603-42e0-acb8-13e01aff9cca",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"id\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"login\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"email\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"first_name\": {",
							"        \"type\": \"string\"",
							"    },",
							"    \"last_name\": {",
							"        \"type\": \"string\"",
							"    }",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(jsonData.firstName).to.eql(pm.variables.get(\"firstName2\"));",
							"    pm.expect(jsonData.lastName).to.eql(pm.variables.get(\"lastName2\"));",
							"    pm.expect(jsonData.username).to.eql(pm.variables.get(\"login2\"));",
							"    pm.expect(jsonData.email).to.eql(pm.variables.get(\"email2\"));",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"id\", jsonData.id);",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/user/api/v1/users/{{userId2}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"api",
						"v1",
						"users",
						"{{userId2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout second user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8e50ba88-1a25-4182-9403-a8522680a4de",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/otusapp/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"otusapp",
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "20389290-a44e-44ff-b11e-460020372e97",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "b184611b-0b89-407a-80a0-e3f5bb157bdb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "6f87d5cb-d6a0-455e-9d27-46ea8484afde",
			"key": "baseUrl",
			"value": "arch.homework",
			"type": "string"
		},
		{
			"id": "5ab26e45-c193-4b76-91db-be115b4e4105",
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"id": "78be35c1-5cfd-4644-b8cd-40adb1507562",
			"key": "login",
			"value": "",
			"type": "string"
		},
		{
			"id": "14d7c7c2-c152-4585-95a8-60eba5ce3630",
			"key": "email",
			"value": "",
			"type": "string"
		},
		{
			"id": "f81d69b4-2df6-4cfe-98de-48ba2861262b",
			"key": "firstName",
			"value": "",
			"type": "string"
		},
		{
			"id": "4c6bbd67-4663-498a-94e7-5ebb1885685b",
			"key": "lastName",
			"value": "",
			"type": "string"
		},
		{
			"id": "87b11805-415e-4477-b31e-941fbea1650f",
			"key": "password",
			"value": "",
			"type": "string"
		},
		{
			"id": "3ff8a748-3394-4766-b16a-ea8419e9f654",
			"key": "phone",
			"value": "",
			"type": "string"
		},
		{
			"id": "7bf7b4d8-b9ae-4f4d-9624-a3a62dcdd254",
			"key": "id",
			"value": "",
			"type": "string"
		},
		{
			"id": "3c51ab30-afd5-4094-a00c-8e84ed97b3c9",
			"key": "newEmail",
			"value": "",
			"type": "string"
		},
		{
			"id": "57b76767-65cc-4e53-ad2a-faa8c52cb925",
			"key": "newLogin",
			"value": "",
			"type": "string"
		},
		{
			"id": "7b375be0-91ad-423a-8b1a-ed836053fd37",
			"key": "email2",
			"value": "",
			"type": "string"
		},
		{
			"id": "8f2db78e-13e9-43f3-9aef-23aa15f5eace",
			"key": "firstName2",
			"value": "",
			"type": "string"
		},
		{
			"id": "2ff5886a-929b-4b7e-a61f-0dd6bf976404",
			"key": "lastName2",
			"value": "",
			"type": "string"
		},
		{
			"id": "33a53f7e-6745-42a6-a251-5fc7e43b7c8b",
			"key": "login2",
			"value": "",
			"type": "string"
		},
		{
			"id": "87c4022c-5b4b-498c-9ded-77e7cf585c70",
			"key": "password2",
			"value": "",
			"type": "string"
		},
		{
			"id": "e12a598b-ba3e-42b5-b1ad-afa6c645ddc0",
			"key": "phone2",
			"value": "",
			"type": "string"
		},
		{
			"id": "52d4190c-924d-4ebe-84d0-7e29593e3db4",
			"key": "userId2",
			"value": "",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}