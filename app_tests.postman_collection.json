{
	"info": {
		"_postman_id": "28440346-6458-4760-a4bc-43319119f78f",
		"name": "Проект",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "27e7ee2a-8754-45d7-a407-20e7a9e03c99",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get product error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "86cc1524-ae65-4289-ab70-b378027dc8c7",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/products/72eb9cf0-da7f-11ea-ab94-02420a200004",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"products",
						"72eb9cf0-da7f-11ea-ab94-02420a200004"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7c22c081-7cb9-4d80-9b6a-1cd8ed17adae",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							" \"userId\": {",
							" \"type\": \"string\"",
							" }",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"userId\", jsonData.userId);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b91e3056-3683-4d57-b2c7-88aea84f87ac",
						"exec": [
							"pm.collectionVariables.set(\"login\", pm.variables.replaceIn('{{$randomUserName}}'));",
							"pm.collectionVariables.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'));",
							"pm.collectionVariables.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'));",
							"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'));",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));",
							"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{login}}\",\n  \"password\": \"{{password}}\",\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"{{email}}\",\n  \"phone\": \"{{phone}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users/signup",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get product error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7e0794ab-981b-4b4a-a870-8dd6b4687e6e",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/products/72eb9cf0-da7f-11ea-ab94-02420a200004",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"products",
						"72eb9cf0-da7f-11ea-ab94-02420a200004"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cc768594-00eb-4474-9e32-bfa08551af3c",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"johndoe589\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Wick\",\n    \"email\": \"john@wick.com\",\n    \"phone\": \"+71002003040\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a9dfdd27-bd74-4039-be24-13bbd0eefc42",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"login\": \"{{login}}\",\n  \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search product",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c3fc826-c86b-421e-9d66-c6d6bebc74f3",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\":\"object\",",
							"    \"properties\": {",
							"        \"products\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"object\",",
							"                \"properties\": {",
							"                    \"productID\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"metaProductID\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"title\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"description\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"material\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"price\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"height\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"color\": {",
							"                        \"type\": \"string\"",
							"                    }",
							"                },",
							"                \"required\": [\"metaProductID\", \"title\", \"description\", \"material\", \"price\"]   ",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(Object.keys(jsonData).length).to.eql(1);",
							"    pm.expect(jsonData.products.length > 0).to.eql(true);",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"productId\", jsonData.products[0].productID);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"search\": \"Go\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/products",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get product",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1e706cae-87c1-481b-8bdd-050dd6d9b94f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"metaProductID\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"title\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"description\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"material\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"price\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"height\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"color\": {",
							"            \"type\": \"string\"",
							"        }",
							"    },",
							"    \"required\": [\"metaProductID\", \"title\", \"description\", \"material\", \"price\"]",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"id\", jsonData.id);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/products/{{productId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"products",
						"{{productId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read Cart error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8a3cd878-3512-40f1-910b-c3068f7d80ef",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/cart",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"cart"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Product to Cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "88f0de35-de03-4638-bde6-9ac6be3e81d1",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "8a150d25-455a-44f2-b8ec-522f54ee6e39",
						"exec": [
							"pm.collectionVariables.set(\"newLogin\", pm.variables.replaceIn('{{$randomUserName}}'));",
							"pm.collectionVariables.set(\"newEmail\", pm.variables.replaceIn('{{$randomEmail}}'));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"productID\": \"{{productId}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/cart/product",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"cart",
						"product"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read Cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3fc1c596-5a8f-481e-b546-3bfffdd0d177",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"cartID\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"productIDs\": {",
							"            \"type\": \"array\"",
							"        },",
							"    },",
							"    \"required\": [\"cartID\", \"productIDs\"]",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(jsonData.productIDs[0]).to.eql(pm.variables.get(\"productId\"));",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"id\", jsonData.id);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/cart",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"cart"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read Orders (empty list)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "41686f7b-05ad-4a54-bc77-5ff757881922",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"",
							"    \"properties\": {",
							"        \"orders\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"object\",",
							"",
							"                \"properties\": {",
							"                    \"orderID\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"status\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"products\": {",
							"                        \"type\": \"array\"",
							"                    },",
							"                },",
							"                \"required\": [\"orderID\", \"status\", \"products\"]",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(Object.keys(jsonData).length).to.eql(0);",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"id\", jsonData.id);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2099317c-1f98-4ca6-8ac9-78735daf6b74",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"orderID\": {",
							"            \"type\": \"string\"",
							"        }",
							"    },",
							"    \"required\": [\"orderID\"]",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"orderId\", jsonData.orderID);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read Order Pending",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "780e77e9-6b2c-4cf0-bd9e-37a102d0f75b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"",
							"    \"properties\": {",
							"        \"orders\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"object\",",
							"",
							"                \"properties\": {",
							"                    \"orderID\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"status\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"products\": {",
							"                        \"type\": \"array\"",
							"                    },",
							"                },",
							"                \"required\": [\"orderID\", \"status\", \"products\"]",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(Object.keys(jsonData).length).to.eql(1);",
							"    pm.expect(jsonData.orders.length).to.eql(1);",
							"    pm.expect(jsonData.orders[0].status).to.eql(\"pending\");",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"id\", jsonData.id);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pay Order Directly Error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0d6396bf-be0e-48d4-be05-9462b8b2f0ae",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/internal/orders/{{orderId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"internal",
						"orders",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read Cart (empty)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9327f8b1-8ed0-4b84-852e-255602fd0410",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"cartID\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"productIDs\": {",
							"            \"type\": \"array\"",
							"        },",
							"    },",
							"    \"required\": [\"cartID\"]",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(jsonData.productIDs).to.eql(undefined);",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"id\", jsonData.id);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/cart",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"cart"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pay Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "318eb274-f1e2-48af-b2db-3fea900b1f5e",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ba1133fe-b76b-4b92-a5f8-83d86fb012ff",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"orderID\": \"{{orderId}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/payment",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"payment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read Order Completed",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cd03388d-a960-4499-96d4-92fa200cca72",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"",
							"    \"properties\": {",
							"        \"orders\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"object\",",
							"",
							"                \"properties\": {",
							"                    \"orderID\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"status\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"products\": {",
							"                        \"type\": \"array\"",
							"                    },",
							"                },",
							"                \"required\": [\"orderID\", \"status\", \"products\"]",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(Object.keys(jsonData).length).to.eql(1);",
							"    pm.expect(jsonData.orders.length).to.eql(1);",
							"    pm.expect(jsonData.orders[0].status).to.eql(\"completed\");",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"id\", jsonData.id);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read popular products",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "83d01d60-44bc-47bd-bf0b-e382746e1985",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\":\"object\",",
							"    \"properties\": {",
							"        \"products\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"object\",",
							"                \"properties\": {",
							"                    \"productID\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"title\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"description\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"material\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"price\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"height\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"color\": {",
							"                        \"type\": \"string\"",
							"                    }",
							"                },",
							"                \"required\": [\"productID\", \"title\", \"description\", \"material\", \"price\"]   ",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(Object.keys(jsonData).length).to.eql(1);",
							"    pm.expect(jsonData.products.length > 0).to.eql(true);",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"productId\", jsonData.products[0].productID);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"count\": 6\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/popular",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"popular"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c9055e71-f905-4f44-bea3-f0af3779ad70",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "626878db-61f1-4e2a-93e2-37ac8ff752dd",
						"exec": [
							"pm.collectionVariables.set(\"newLogin\", pm.variables.replaceIn('{{$randomUserName}}'));",
							"pm.collectionVariables.set(\"newEmail\", pm.variables.replaceIn('{{$randomEmail}}'));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{newLogin}}\",\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"{{newEmail}}\",\n  \"phone\": \"{{phone}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c7eab9fd-d22e-48e5-a6f8-5a9290df9402",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"username\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"email\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"firstName\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"lastName\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"phone\": {",
							"            \"type\": \"string\"",
							"        }",
							"    },",
							"    \"required\": [\"phone\", \"username\", \"email\", \"firstName\", \"lastName\"]",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(jsonData.firstName).to.eql(pm.variables.get(\"firstName\"));",
							"    pm.expect(jsonData.lastName).to.eql(pm.variables.get(\"lastName\"));",
							"    pm.expect(jsonData.username).to.eql(pm.variables.get(\"newLogin\"));",
							"    pm.expect(jsonData.email).to.eql(pm.variables.get(\"newEmail\"));",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"id\", jsonData.id);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users/{{userId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b4b1849e-32cb-4e2e-a12a-e43fabe2cfb8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get product error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4cc6ee46-a0a4-4dfa-92a0-5e424ab36eb5",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/products/72eb9cf0-da7f-11ea-ab94-02420a200004",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"products",
						"72eb9cf0-da7f-11ea-ab94-02420a200004"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read user error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07a51245-9b95-4ea6-9f6a-6951cebb4a49",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users/{{userId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register second user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6664afc9-440a-4604-8acf-515088ff43c7",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var schema = {",
							" \"userId\": {",
							" \"type\": \"string\"",
							" }",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"userId2\", jsonData.userId);",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "65c7b6f0-691f-4d53-a67b-e9a7e4b92f5b",
						"exec": [
							"pm.collectionVariables.set(\"login2\", pm.variables.replaceIn('{{$randomUserName}}'));",
							"pm.collectionVariables.set(\"password2\", pm.variables.replaceIn('{{$randomPassword}}'));",
							"pm.collectionVariables.set(\"firstName2\", pm.variables.replaceIn('{{$randomFirstName}}'));",
							"pm.collectionVariables.set(\"lastName2\", pm.variables.replaceIn('{{$randomLastName}}'));",
							"pm.collectionVariables.set(\"email2\", pm.variables.replaceIn('{{$randomEmail}}'));",
							"pm.collectionVariables.set(\"phone2\", pm.variables.replaceIn('{{$randomPhoneNumber}}'));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{login2}}\",\n  \"password\": \"{{password2}}\",\n  \"firstName\": \"{{firstName2}}\",\n  \"lastName\": \"{{lastName2}}\",\n  \"email\": \"{{email2}}\",\n  \"phone\": \"{{phone2}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users/signup",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login second user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8c9d4063-9781-4271-a2f3-1ccb7829d7ac",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"login\": \"{{login2}}\",\n  \"password\": \"{{password2}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update first user error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ed74cb69-655e-47f1-b5dd-00a1e0462e88",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"johndoe589\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Wick\",\n    \"email\": \"john@wick.com\",\n    \"phone\": \"+71002003040\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users/{{userId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read first user error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a1f97591-f6cf-4493-b17b-b91e16f7796e",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users/{{userId}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Read second user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1b1bc562-d4ab-4ba1-aee1-30ae77c2ca8c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"var schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"username\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"email\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"firstName\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"lastName\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"phone\": {",
							"            \"type\": \"string\"",
							"        }",
							"    },",
							"    \"required\": [\"phone\", \"username\", \"email\", \"firstName\", \"lastName\"]",
							"};",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Response schema is valid\", function () {",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"pm.test(\"Data is valid\", function () {",
							"    pm.expect(jsonData.firstName).to.eql(pm.variables.get(\"firstName2\"));",
							"    pm.expect(jsonData.lastName).to.eql(pm.variables.get(\"lastName2\"));",
							"    pm.expect(jsonData.username).to.eql(pm.variables.get(\"login2\"));",
							"    pm.expect(jsonData.email).to.eql(pm.variables.get(\"email2\"));",
							"});",
							"",
							"var responseJSON = JSON.parse(responseBody)",
							"pm.collectionVariables.set(\"id\", jsonData.id);",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/v1/users/{{userId2}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{userId2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout second user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bdf51f52-e18a-4691-8638-fcaeceb7250b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"tests[\"[INFO] Request: \" + (('data' in request) ? request['data'] : '') ] = true;",
							"tests[\"[INFO] Response: \" + responseBody] = true;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d47c387f-fbe6-4621-89a6-3480560d9245",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e39488fb-222d-40a7-9410-4505de8c6585",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "035d5522-7b8a-4161-8ee0-f06237b5030c",
			"key": "baseUrl",
			"value": "arch.homework"
		},
		{
			"id": "e2f076c6-58fb-42c8-96a1-a3b5e2e5e41c",
			"key": "userId",
			"value": ""
		},
		{
			"id": "816ac82f-3986-42f9-9abf-00c4aee8eb3d",
			"key": "login",
			"value": ""
		},
		{
			"id": "ff5cf1d4-dc34-4317-b491-46af87e5c981",
			"key": "email",
			"value": ""
		},
		{
			"id": "69a898d7-6b86-4b42-930b-b4be499e8d05",
			"key": "firstName",
			"value": ""
		},
		{
			"id": "befc675a-f45c-4315-b57b-aa4e22ba3322",
			"key": "lastName",
			"value": ""
		},
		{
			"id": "96078472-fbc4-4919-8d1b-f44d010aa591",
			"key": "password",
			"value": ""
		},
		{
			"id": "26b643d6-ed70-4a6d-8557-4ca364afa0ac",
			"key": "phone",
			"value": ""
		},
		{
			"id": "9b4012e5-1833-4fe7-bbfa-6a6c5b7fb86c",
			"key": "id",
			"value": ""
		},
		{
			"id": "f017c7ae-955e-442e-b808-115692945989",
			"key": "newEmail",
			"value": ""
		},
		{
			"id": "94a7b7e3-f50c-4329-8451-c2e930bdfdf1",
			"key": "newLogin",
			"value": ""
		},
		{
			"id": "d946dceb-66e7-4158-99c2-1ad0d03d0a49",
			"key": "email2",
			"value": ""
		},
		{
			"id": "7044558c-ba45-470a-9184-cff572909c24",
			"key": "firstName2",
			"value": ""
		},
		{
			"id": "0bb6b512-5f2d-432b-b0e8-2ec32b0e9e3a",
			"key": "lastName2",
			"value": ""
		},
		{
			"id": "6bfb5507-d1a3-4b56-8144-14f7bff1ce07",
			"key": "login2",
			"value": ""
		},
		{
			"id": "01fede14-9e84-4dbe-8725-c4f628269ad6",
			"key": "password2",
			"value": ""
		},
		{
			"id": "3cc071f8-fd6c-4e81-96f3-b5c3ad8e209d",
			"key": "phone2",
			"value": ""
		},
		{
			"id": "7ae34858-766f-4992-9904-443f6f883e2d",
			"key": "userId2",
			"value": ""
		},
		{
			"id": "88dff7b3-0831-455a-8db4-c0e358af09e8",
			"key": "orderId",
			"value": ""
		},
		{
			"id": "788268cc-1d2d-4845-848f-241116947cb1",
			"key": "productId",
			"value": ""
		}
	],
	"protocolProfileBehavior": {}
}